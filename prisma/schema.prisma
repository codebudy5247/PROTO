generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    USER
}

enum CollectionType {
    MEN
    WOMEN
    KIDS
}

enum ProductSize {
    S
    M
    L
    XL
    XXL
    XXXL
}

enum ProductColor {
    BLACK
    WHITE
    GRAY
    RED
    ORANGE
    YELLOW
    GREEN
    PINK
    BLUE
    PURPLE
}

model User {
    id                     String   @id @default(uuid())
    name                   String
    email                  String   @unique
    password               String
    role                   Role     @default(USER)
    defaultShippingAddress String?
    defaultBillingAddress  String?
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt

    cartItems CartItem[]

    @@map("users")
}

model Collection {
    id        Int              @id @default(autoincrement())
    createdAt DateTime         @default(now())
    updatedAt DateTime         @updatedAt
    name      String           @db.VarChar(255)
    slug      String           @unique
    types     CollectionType[]
    parentId  Int?
    parent    Collection?      @relation(name: "ParentChild", fields: [parentId], references: [id])
    children  Collection[]     @relation(name: "ParentChild")
    products  Product[]

    @@map("collections")
}

model Product {
    id           String           @id @default(uuid())
    createdAt    DateTime         @default(now())
    updatedAt    DateTime         @updatedAt
    name         String           @db.VarChar(255)
    description  String
    price        Float
    rate         Float
    published    Boolean          @default(false)
    images       ProductImage[]
    colors       ProductColor[]
    sizes        ProductSize[]
    types        CollectionType[]
    collection   Collection       @relation(fields: [collectionId], references: [id])
    collectionId Int

    cartItems CartItem[]

    @@map("products")
}

model ProductImage {
    id        Int      @id @default(autoincrement())
    imageURL  String
    imageBlur String
    Product   Product? @relation(fields: [productId], references: [id])
    productId String?

    @@map("product_images")
}

model CartItem {
    id        String   @id @default(uuid())
    User      User     @relation(fields: [userId], references: [id])
    userId    String
    Product   Product  @relation(fields: [productId], references: [id])
    productId String
    quantity  Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("cart_items")
}
